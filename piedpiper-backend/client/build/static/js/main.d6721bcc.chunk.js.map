{"version":3,"sources":["components/Profile/Profile.module.css","containers/PiperChat/Contact.module.css","containers/PiperChat/ChatScreen.module.css","store/actions/actionCreators/callActionCreatorss.js","components/UI/Button/Button.js","containers/Call/IncomingCallNotification/IncomingCall.js","Axios.js","store/actions/actionCreators/authActionCreators.js","store/actions/actions.js","store/actions/actionCreators/chatActionCreators.js","components/UI/Input/Input.js","shared/utility.js","components/UI/ErrorBox/ErrorBox.js","components/Auth/Register/Register.js","components/Auth/Login/Login.js","components/Auth/Logout/Logout.js","components/UI/Navigation/Navbar.js","components/UI/OptionsDropbar/OptionsDropbar.js","containers/PiperChat/Contact.js","components/UI/SideDrawer/JoinableRooms/JoinableRoom/JoinableRoom.js","components/UI/TabBar/TabBar.js","components/UI/SideDrawer/SideDrawer.js","components/NoContacts/NoContacts.js","containers/PiperChat/Chat.js","components/Profile/Profile.js","containers/Modal/Modal.js","containers/Call/Call.js","components/ChatScreenBar/ChatScreenBar.js","components/UI/Spinner/Spinner.js","components/Search/Search.js","containers/PiperChat/ChatScreen.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/callReducer.js","store/reducers/chatReducer.js","index.js","components/UI/Navigation/Navbar.module.css","containers/Call/Call.module.css","components/NoContacts/NoContacts.module.css","components/ChatScreenBar/ChatScreenBar.module.css","assets/images/p37605.png","components/UI/Input/Input.module.css","components/Auth/Login/Login.module.css","components/Search/Search.module.css","components/UI/SideDrawer/SideDrawer.module.css","containers/PiperChat/Chat.module.css","components/UI/Button/Button.module.css","containers/Call/IncomingCallNotification/IncomingCall.module.css","components/Auth/Register/Register.module.css","components/UI/ErrorBox/ErrorBox.module.css","components/UI/OptionsDropbar/OptionsDropbar.module.css","components/UI/SideDrawer/JoinableRooms/JoinableRoom/JoinableRoom.module.css","components/UI/TabBar/TabBar.module.css","containers/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","assets/audio/iphone_trap_remix.mp3"],"names":["module","exports","Profile","Open","Close","ProfileImage","ProfileImageContainer","ChangeImage","CameraIcon","ChangeImageText","ProfileInfo","Names","Label","Name","Username","About","SocialProfiles","SocialIcons","Contact","ContactDetails","Active","ImageContainer","FloatedRight","FloatedLeft","LastMessage","UnreadMessagesContainer","LastUpdated","UnreadMessages","ChatScreen","ContactsPane","MenuBar","MenuImageContainer","BackgroundImage","Chat","Msgs","connectedUser","yourConn","button","props","react_default","a","createElement","onClick","clicked","disabled","className","classes","Button","btnType","join","children","IncomingCall","callType","caller","Buttons","acceptCall","rejectCall","instance","axios","create","baseURL","checkTokenValidity","expiresIn","dispatch","setTimeout","localStorage","removeItem","logout","logInFailed","err","type","error","authSuccess","token","userId","getItem","config","conn","io","configuration","iceServers","url","stream","on","console","log","msg","candidate","offer","name","data","JSON","parse","from","handleRequest","createOffer","setRemoteDescription","RTCSessionDescription","createAnswer","answer","setLocalDescription","send","alert","handleAnswer","addIceCandidate","RTCIceCandidate","handleLeave","onerror","to","store","RTCPeerConnection","ontrack","onTrack","onicecandidate","event","getMedia","then","gotStream","catch","message","stringify","navigator","mediaDevices","getUserMedia","video","width","height","frameRate","audio","onError","myStream","onLocalStream","getTracks","forEach","track","addTrack","remoteStream","streams","callEnded","stop","close","onaddTrack","currentUser","getRooms","contacts","rooms","map","room","obj","isPrivate","split","filter","id","length","Object","objectSpread","chatInitSuccess","subscribeToRooms","user","getState","con","subscribeToRoom","roomId","hooks","onMessage","belongsToCurrentRoom","currentRoom","chat","onNewMessage","messageLimit","getMessages","fetchMessages","direction","limit","messages","fetchMessagesSuccess","concat","startNewChat","get","chatParticipant","headers","x-auth-token","res","createRoom","private","addUserIds","customData","displayImage","avatar","startNewChatFailed","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","assign","elementConfig","value","onChange","changed","options","option","key","displayValue","Input","label","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","getSVG","fill","xmlns","viewBox","fillOpacity","d","version","transform","x","y","errorBox","errorMessage","response","password","password2","authError","username","ErrorBox","Register","state","controls","placeholder","validation","valid","email","isEqual","formIsValid","loading","inputIdentifier","target","updatedFormElement","_this","updatedForm","defineProperty","setState","onSubmit","preventDefault","_this$state$controls","control","onRegister","this","_this$props","registrationSuccess","history","_this2","_this$state","formElements","form","formElement","RegisterBox","Fragment","LoadingText","Component","connect","auth","post","_res$data2","registrationFailed","actionCreators","Login","e","onLogIn","comingSoon","swal","fire","title","icon","showCloseButton","focusConfirm","confirmButtonText","isLoggedIn","redirect","es_Redirect","sort","b","localeCompare","AuthOptions","LoginOptions","LoginOptionsIcons","_res$data","expirationDate","Date","getTime","setItem","logInSuccess","Logout","Navbar","displayedElements","Link","Brand","NavItem","style","display","OptionsDropbar","hideOptions","optionsRef","contains","optionClicked","deleteChat","showProfile","document","addEventListener","window","onresize","removeEventListener","show","ref","ul","top","position","left","i","withRouter","leaveRoom","chatActionCreators","_useState","useState","_useState2","slicedToArray","showOptions","toggleShowOptions","_useState3","_useState4","updatePosition","attachedClasses","unreadMessages","unopenedMessages","date","contact","ImageContainter","src","img","alt","updatedAt","moment","updateLocale","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","stopPropagation","pos","clientX","clientY","UI_OptionsDropbar_OptionsDropbar","joinRoom","JoinableRoom","groupImage","lastMessage","tabBar","_ref","goBack","tabName","TabBar","SideDrawer","showCreateForm","showNewChatForm","groupName","participants","potentialParticipants","newGroupChatParticipants","privateChatParticipant","joinableRooms","ShowJoinableRoomsList","createNewGroupHandler","chatParticipants","pp","prevState","onCreateNewGroup","keys","j","startNewChatHandler","onStartNewChat","joinGroup","getJoinableRooms","onPPChange","_event$target","checked","groupParticipants","hideSideDrawer","actionType","foo","createGroupFailed","noContacts","showSideDrawer","toggleShowSideDrawer","updateActionType","actionClickedHandler","NoContacts","UserActions","UserAction","ActionsIcons","UI_SideDrawer_SideDrawer","byCurrentUser","ByCurrentUser","Sender","sender","Text","text","hideProfile","placeholderImage","modal","Modal","Call","isPlaying","endCall","role","closeModal","callUser","callTo","channel","localStream","localVideoRef","srcObject","remoteVideoRef","localAudioRef","remoteAudioRef","toString","_this3","_this$props2","call","videoContainer","LocalVideo","autoPlay","muted","lVid","RemoteVideo","rVid","CallButtons","EndCallBtn","MuteBtn","incomingCall","callActionCreators","ChatScreenBar","showModal","isVideo","onVideoCallInit","onVoiceCallInit","optionsDropbar","RoomDetails","RoomName","RoomMembers","FA","containers_Call_Call","callStarted","callOngoing","spinner","prop","Spinner","Search","showSubmitButton","showBackBtn","searchText","labelClickedHandler","SearchLabel","SearchBtn","BackBtn","SubmitBtn","scrollToBottom","scrollRef","lastElement","scrollIntoView","sendMessage","toggleProfile","chatInit","components_ChatScreenBar_ChatScreenBar","div","senderId","contactsPane","chatkitUser","components_Profile_Profile","components_Search_Search","ChatManager","instanceLocator","tokenProvider","TokenProvider","onAddedToRoom","App","showCallNotification","ringtoneRef","pause","currentTime","callAccepted","callRejected","onAuth","getCallerReady","chatScreen","play","IncomingCallNotification_IncomingCall","PiperChat_ChatScreen","Navigation_Navbar","ringtone","loop","ring","Switch","Route","path","component","Redirect","Boolean","location","hostname","match","initialState","authReducer","arguments","undefined","action","callReducer","chatReducer","item","reduce","acc","toConsumableArray","unopenedMessagesCopy","hasOwnProperty","__webpack_require__","__webpack_exports__","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","render","es","BrowserRouter","src_App_0","getElementById","serviceWorker","ready","registration","unregister","p","spin","PP","divs","RoomsList","Success","Danger"],"mappings":"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","file":"static/js/main.d6721bcc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__1xHMh\",\"Open\":\"Profile_Open__1YvNg\",\"Close\":\"Profile_Close__1dveZ\",\"ProfileImage\":\"Profile_ProfileImage__2411c\",\"ProfileImageContainer\":\"Profile_ProfileImageContainer__1ttkN\",\"ChangeImage\":\"Profile_ChangeImage__e6Ga3\",\"CameraIcon\":\"Profile_CameraIcon___Jzfr\",\"ChangeImageText\":\"Profile_ChangeImageText__3BiBU\",\"ProfileInfo\":\"Profile_ProfileInfo__3OSgb\",\"Names\":\"Profile_Names__3E-ed\",\"Label\":\"Profile_Label__3IKvg\",\"Name\":\"Profile_Name__1NsMB\",\"Username\":\"Profile_Username__1Y28R\",\"About\":\"Profile_About__2USg6\",\"SocialProfiles\":\"Profile_SocialProfiles__2eZXK\",\"SocialIcons\":\"Profile_SocialIcons__k8nt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__I6ygz\",\"ContactDetails\":\"Contact_ContactDetails__1Njgv\",\"Active\":\"Contact_Active__1q391\",\"ImageContainer\":\"Contact_ImageContainer__15hN_\",\"FloatedRight\":\"Contact_FloatedRight__267zm\",\"FloatedLeft\":\"Contact_FloatedLeft__2-Piy\",\"LastMessage\":\"Contact_LastMessage__3rS-w\",\"UnreadMessagesContainer\":\"Contact_UnreadMessagesContainer__1XUCU\",\"LastUpdated\":\"Contact_LastUpdated__2lx4g\",\"UnreadMessages\":\"Contact_UnreadMessages__3nsN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatScreen\":\"ChatScreen_ChatScreen__3NJNg\",\"ContactsPane\":\"ChatScreen_ContactsPane__2wBCJ\",\"MenuBar\":\"ChatScreen_MenuBar__xjjtB\",\"MenuImageContainer\":\"ChatScreen_MenuImageContainer__2Zzey\",\"BackgroundImage\":\"ChatScreen_BackgroundImage__3BN8F\",\"Chat\":\"ChatScreen_Chat__9S2DJ\",\"Msgs\":\"ChatScreen_Msgs__20qJ1\"};","import { store }  from '../../../index';\nimport * as actionTypes from '../actions';\nimport io from 'socket.io-client'; \nimport swal from 'sweetalert2';\n\nlet connectedUser;\nconst userId = localStorage.getItem('userId');\nconst config = {};\n\n//connecting to our signaling server\n// const conn = io('http://localhost:8082')\nconst conn = io('https://piedpiperchat.herokuapp.com:8082')\nconst configuration = { \n    \"iceServers\": [{ \"url\": \"stun:stun2.1.google.com:19302\" }]\n};\n\nlet yourConn;\nlet stream = null;\n\nconn.on('connection', function () { \n   console.log(\"Connected to the signaling server\"); \n});\n\nconst prepareCaller = channel => {\n    return {\n        type: actionTypes.PREPARE_CALLER,\n        channel: channel\n    }\n}\nexport const getCallerReady = () => {\n    return dispatch => {\n        send({ \n            type: \"login\", \n            name: userId\n         });   \n        dispatch(prepareCaller(conn));\n    }\n}\n//when we got a message from a signaling server \nconn.on('message', function (msg) { \n\n   console.log(\"Got message\", msg);\n\t\n   const data = JSON.parse(msg); \n\t\n   switch(data.type) { \n    case \"login\": \n        //  handleLogin(data.success); \n        console.log('logged in')\n        break; \n    case \"requestToCall\":\n        //prepare user for call\n        console.log('received a request from ' + data.from);\n        handleRequest(data.from); \n        break;\n    case \"answerToRequest\":\n        //user is ready...send them an offer\n        console.log('received an answer from ' + data.from);\n        createOffer(data.from); \n        break;\n\n    //when somebody wants to call us \n    case \"offer\": \n        handleOffer(data.offer, data.name)\n        break; \n    case \"answer\": \n        handleAnswer(data.answer, data.from); \n        break; \n    //when a remote peer sends an ice candidate to us \n    case \"candidate\": \n        handleCandidate(data.candidate); \n        break; \n    case \"leave\": \n        handleLeave(); \n        break; \n    default: \n        break; \n   }\n});\n  \nconn.onerror = err => { \n   console.log(\"Got error\", err); \n};\n\nconst createOffer = to => {\n    // create an offer \n    yourConn.createOffer(function (offer) { \n        send({ \n            type: \"offer\", \n            offer: offer \n        }); \n            \n        yourConn.setLocalDescription(offer); \n        }, error => { \n        alert(\"Error when creating an offer\"); \n        });\n}\nconst handleRequest = from => {\n    connectedUser = from;\n    store.dispatch({type: actionTypes.ON_INCOMING_CALL, callType: 'video', caller: from});\n    yourConn = new RTCPeerConnection(configuration);\n        \n        //when a remote user adds stream to the peer connection, we display it \n        yourConn.ontrack = function (stream) { \n            console.log('got remote stream');\n            console.log(stream)\n        store.dispatch(onTrack(stream));\n        };\n        console.log(yourConn);\n        // Setup ice handling \n        yourConn.onicecandidate = function (event) { \n        if (event.candidate) { \n            send({ \n                type: \"candidate\", \n                candidate: event.candidate\n            }); \n        } \n        }\n    getMedia().then(gotStream).catch(err => console.log(err));\n}\n//alias for sending JSON encoded messages \nfunction send(message) { \n   //attach the other peer username to our messages \n   if (connectedUser) { \n      message.name = connectedUser; \n   } \n\t\n   conn.send(JSON.stringify(message)); \n};\n\nconst getMedia = () => {\n    return navigator.mediaDevices.getUserMedia({\n        video: {\n            width: 1280,\n                height: 720,\n                frameRate: 15\n            },\n        audio: true\n      });\n}\n\nexport const callUser = (user, type) => {\n    connectedUser = user;\n    config.type = type;\n    console.log('calling ' + user + '....' );\n    return dispatch => {\n        yourConn = new RTCPeerConnection(configuration);\n        \n        //when a remote user adds stream to the peer connection, we display it \n        yourConn.ontrack = function (stream) { \n        store.dispatch(onTrack(stream));\n        };\n        // Setup ice handling \n        yourConn.onicecandidate = function (event) { \n        if (event.candidate) { \n            send({ \n                type: \"candidate\", \n                candidate: event.candidate\n            }); \n        } \n        }\n        getMedia().then(gotStream)\n        .catch(e => {\n            dispatch(onError(e));\n            console.log(`getUserMedia() error: ${e}`)\n        });       \n    }\n  }\n\n  const onError = err => {\n      return {\n          type: actionTypes.ON_ERROR,\n          error: err\n      }\n  }\n\nconst gotStream = myStream => {\n    store.dispatch({type: actionTypes.CALL_INIT})\n    send({\n        type: 'requestToCall',\n        from: userId,\n        to: connectedUser\n    }) \n    stream = myStream;\n    store.dispatch(onLocalStream(myStream));\n    myStream.getTracks().forEach(track => {\n        console.log(track);\n            yourConn.addTrack(track, myStream)\n        });\n}\n\nconst onTrack = track => {\n    return {\n        type: actionTypes.ON_TRACK,\n        remoteStream: track.streams[0]\n    }\n}\n\nconst onLocalStream = stream => {\n    return {\n        type: actionTypes.ON_LOCAL_STREAM,\n        stream: stream\n    }\n}\nfunction handleOffer(offer, name) { \n    console.log('Accepting offer from ' + connectedUser);\n    yourConn.setRemoteDescription(new RTCSessionDescription(offer));\n     \n    //create an answer to an offer \n    console.log('Creating and sending answer to ' + connectedUser);\n    yourConn.createAnswer(answer => { \n        yourConn.setLocalDescription(answer); \n        send({ \n            type: \"answer\", \n            answer: answer,\n            from: name \n       }); \n         \n    }, error => { \n       alert(\"Error when creating an answer\"); \n    }); \n}\nexport const callAccepted = () => {\n    return dispatch => {\n        send({\n            type: 'answerToRequest',\n            to: connectedUser,\n            from: userId\n        })\n        dispatch({type: actionTypes.CALL_ACCEPTED})\n    }\n}\nexport const callRejected = () => {\n    return dispatch => {\n        // channel.trigger(\"client-reject\", { room: config.room, rejected: userId });\n        dispatch({type: actionTypes.CALL_REJECTED})\n    }\n}\nfunction handleAnswer(answer, name) { \n    console.log('Accepting answer from ' + name)\n   yourConn.setRemoteDescription(new RTCSessionDescription(answer)); \n};\nfunction handleCandidate(candidate) { \n    yourConn.addIceCandidate(new RTCIceCandidate(candidate)); \n};\n\nconst callEnded = () => {\n    return {\n        type: actionTypes.END_CALL\n    }\n}\nexport const endCall = () => {\n    return dispatch => {\n        console.log(connectedUser)\n        send({ \n            type: \"leave\",\n            name: connectedUser \n         }); \n        handleLeave(); \n    }\n}\n\nfunction handleLeave() { \n    connectedUser = null; \n    stream.getTracks().forEach(track => track.stop());\n    store.dispatch(callEnded()); \n    yourConn.close(); \n    yourConn.onicecandidate = null; \n    yourConn.onaddTrack = null;\n };","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = ( props ) => (\n    <button\n    onClick = {props.clicked}\n    disabled={props.disabled}\n    className={[classes.Button, classes[props.btnType]].join(' ')}\n    >{props.children}</button>\n);\n\nexport default button;","import React from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './IncomingCall.module.css';\n\nconst IncomingCall = props => (\n    <div className={classes.IncomingCall}>\n        <span>Incoming {props.callType} call from {props.caller}</span>\n        <span className={classes.Buttons}>\n            <Button clicked={props.acceptCall} btnType='Success'>Accept</Button>\n            <Button clicked={props.rejectCall} btnType='Danger'>Reject</Button>\n        </span>\n    </div>\n)\n\nexport default IncomingCall;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://piedpiperchat.herokuapp.com/' //'http://localhost:8080' //'https://piedpiperchat.herokuapp.com/'\n});\n\n\nexport default instance;","import * as actionTypes from '../actions';\nimport axios from '../../../Axios';\n\nconst logInSuccess = (token, userId) => {\n    return {\n        type: actionTypes.LOG_IN,\n        token: token, \n        userId: userId\n    }\n}\nconst checkTokenValidity = expiresIn => {\n    return dispatch => {\n        setTimeout(() => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"expiresIn\");\n            dispatch(logout());\n        }, expiresIn * 1000);\n    }\n}\n\nconst onAuthInit = () => {\n    return {\n        type: actionTypes.ON_AUTH_INIT\n    }\n}\nexport const onLogIn = (data) => {\n    return dispatch => {\n        dispatch(onAuthInit())\n        axios.post(\"/login\", data)\n         .then(res => {\n           const { userId, token, expiresIn } = res.data;\n           const expirationDate = new Date (new Date().getTime() + expiresIn * 1000);\n           localStorage.setItem(\"token\", token);\n           localStorage.setItem(\"userId\", userId);\n           localStorage.setItem(\"expiresIn\", expirationDate);\n           dispatch(logInSuccess(res.data.token, userId));\n           dispatch(checkTokenValidity(expiresIn));\n         })\n         .catch(err => {\n             dispatch(logInFailed(err))\n         })\n    }\n}\nconst logInFailed = err => {\n    return {\n        type: actionTypes.LOG_IN_FAILED,\n        error: err \n    }\n}\nconst logout = () => {\n    return {\n        type: actionTypes.LOG_OUT\n    }\n}\n\nexport const onLogout = () => {\n    return dispatch => {\n        //delete token saved in local storage\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        localStorage.removeItem(\"expiresIn\");\n        dispatch(logout());\n    }\n}\n\nconst authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.ON_AUTH,\n        token: token,\n        userId: userId\n    }\n}\nexport const checkAuthState = () => {\n    return dispatch => {\n        let token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date (localStorage.getItem('expiresIn'));\n            if (expirationDate <= new Date()){\n                dispatch(logout)\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkTokenValidity((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            \n            }\n        }\n    }\n}\nconst registered = () => {\n    return {\n        type: actionTypes.ON_REGISTER,\n    }\n}\nconst registrationFailed = err => {\n    return {\n        type: actionTypes.ON_REGISTRATION_FAILED,\n        error: err\n    }\n}\nexport const onRegister = data => {\n    return dispatch => {\n        dispatch(onAuthInit())\n        axios.post(\"/register\", data)\n            .then(res => {\n                const { userId, token, expiresIn } = res.data;\n                dispatch(registered(res))\n                dispatch(authSuccess(token, userId))\n                dispatch(checkTokenValidity(expiresIn));\n            })\n            .catch(err => {\n                dispatch(registrationFailed(err))\n            });\n    }\n}","export const ON_AUTH_INIT = 'ON_AUTH_INIT';\nexport const LOG_IN = \"LOG_IN\";\nexport const LOG_OUT = \"LOG_OUT\";\nexport const LOG_IN_FAILED = \"LOG_IN_FAILED\";\nexport const ON_AUTH = \"ON_AUTH\";\nexport const ON_REGISTER = \"ON_REGISTER\";\nexport const ON_REGISTRATION_FAILED = 'ON_REGISTRATION_FAILED';\n\nexport const PREPARE_CALLER = 'PREPARE_CALLER';\nexport const CALL_INIT = 'CALL_INIT';\nexport const CALL_ACCEPTED = 'CALL_ACCEPTED';\nexport const CALL_REJECTED = 'CALL_REJECTED';\nexport const ON_TRACK = 'ON_TRACK';\nexport const ON_LOCAL_STREAM = 'ON_LOCAL_STREAM';\nexport const ON_INCOMING_CALL = 'ON_INCOMING_CALL';\nexport const END_CALL = 'END_CALL';\nexport const ON_ERROR = 'ON_ERROR';\n\nexport const CHAT_INIT_SUCCESS = 'CHAT_INIT_SUCCESS';\nexport const FETCH_MESSAGES_SUCCESS = 'FETCH_MESSAGES_SUCCESS';\nexport const ON_NEW_MESSAGE = 'ON_NEW_MESSAGE';\nexport const CREATE_GROUP_SUCCESS = 'CREATE_GROUP_SUCCESS';\nexport const CREATE_GROUP_FAILED = 'CREATE_GROUP_FAILED';\nexport const START_NEW_CHAT_SUCCESS = 'START_NEW_CHAT_SUCCESS';\nexport const START_NEW_CHAT_FAILED = 'START_NEW_CHAT_FAILED';\nexport const DELETE_CHAT = 'DELETE_CHAT';\nexport const JOIN_ROOM = 'JOIN_ROOM';\nexport const SUBSCRIPTIONSUCCESSFUL = 'SUBSCRIPTIONSUCCESSFUL';","import * as actionTypes from '../actions';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport axios from '../../../Axios';\n\nlet currentUser;\n\nexport const chatInit = () => { \n    return (dispatch, getState) => {\n        const {userId} = getState().auth;\n        // user = userId;\n        const chatManager = new ChatManager({\n            instanceLocator: 'v1:us1:64b7dbdb-3e59-4fad-9823-83add90cba65',\n            userId: userId,\n            tokenProvider: new TokenProvider({\n                url: 'https://us1.pusherplatform.io/services/chatkit_token_provider/v1/64b7dbdb-3e59-4fad-9823-83add90cba65/token'\n            })\n        });    \n        chatManager\n        .connect({\n            onAddedToRoom: room => {\n                getRooms();\n                getMessages(room);\n            }\n        })\n        .then(user => {\n            currentUser = user;\n            dispatch(subscribeToRooms(currentUser))\n            dispatch(chatInitSuccess(currentUser));\n            dispatch(getRooms());\n        })\n        .catch(err => console.log(err));\n    }\n}\nconst getRooms = () => {\n    return dispatch => {\n        const contacts = currentUser.rooms.map(room => {\n            let obj = {};\n            let name = !room.isPrivate ? room.name :\n                        room.name.split('and')\n                            .filter(name => name !== currentUser.id).join('');\n            !name.length ? obj.name = currentUser.id : obj.name = name;\n            obj.id = room.id;\n            return {...room, ...obj};\n        });\n        dispatch({type: 'ON_ROOMS_FETCHED', contacts})\n    }\n}\nconst chatInitSuccess = currentUser => {\n    return {\n        type: actionTypes.CHAT_INIT_SUCCESS,\n        currentUser\n    }\n}\nconst onNewMessage = (message, belongsToCurrentRoom) => {\n    return {\n        type: actionTypes.ON_NEW_MESSAGE,\n        message,\n        belongsToCurrentRoom\n    }\n}\n\nconst subscriptionSuccessful = rooms => {\n    return {\n        type: actionTypes.SUBSCRIPTIONSUCCESSFUL,\n        rooms\n    }\n}\nconst subscribeToRooms = user => {\n    return (dispatch, getState) => {\n        const contacts = user.rooms;\n        // dispatch(subscriptionSuccessful(contacts))\n        dispatch(getRooms());\n        contacts.map(con => {\n            return  user.subscribeToRoom({\n                 roomId: con.id,\n                 hooks: {\n                   onMessage: message => {\n                     let belongsToCurrentRoom = false;\n                     const { currentRoom } = getState().chat;\n                    if (currentRoom && currentRoom.id === message.roomId){\n                        belongsToCurrentRoom = true;\n                    } \n                    dispatch(onNewMessage(message, belongsToCurrentRoom));\n                   }\n                 },\n                 messageLimit: 0\n               })\n         })\n    }\n}\n\nconst fetchMessagesSuccess = (messages, room) => {\n    return {\n        type: actionTypes.FETCH_MESSAGES_SUCCESS,\n        messages,\n        room\n    }\n}\nexport const getMessages = room => {\n    return dispatch => {\n        currentUser.fetchMessages({\n            roomId: room['id'],\n            //initialId: 42,\n            direction: 'older',\n            limit: 100,\n          })\n            .then(messages => {\n              dispatch(fetchMessagesSuccess(messages, room));\n            })\n            .catch(err => {\n              console.log(`Error fetching messages: ${err}`);\n            })\n    }\n   \n}\nexport const sendMessage = data => {\n    return dispatch => {\n        currentUser.sendMessage(data);\n    }\n}\nconst createGroupSuccess = () => {\n    return {\n        type: actionTypes.CREATE_GROUP_SUCCESS\n    }\n}\nconst createGroupFailed = err => {\n    return {\n        type: actionTypes.CREATE_GROUP_FAILED,\n        err\n    }\n}\nexport const createNewGroup = data => {\n    return dispatch => {\n        currentUser.createRoom({\n            name: data.name,\n            private: false,\n            addUserIds: data.participants,\n            customData: { foo: 42 },\n          }).then(room => {\n            console.log(`Created room called ${room.name}`);\n            dispatch(createGroupSuccess());\n            dispatch(subscribeToRooms());\n          })\n          .catch(err => {\n            console.log(`Error creating room ${err}`);\n            dispatch(createGroupFailed(err));\n          })\n    }\n}\nconst startNewChatSuccess = () => {\n    return {\n        type: actionTypes.START_NEW_CHAT_SUCCESS\n    }\n}\nconst startNewChatFailed = err => {\n    return {\n        type: actionTypes.START_NEW_CHAT_FAILED,\n        err\n    }\n}\nexport const startNewChat = data => {\n    return dispatch => {\n        let token = localStorage.getItem('token');\n        axios.get(`/search/${data.chatParticipant}`, {headers: {'x-auth-token': token}})\n            .then(res => {\n                currentUser.createRoom({\n                name: `${currentUser.id}and${data.chatParticipant}`,\n                private: true,\n                addUserIds: [data.chatParticipant],\n                customData: {displayImage: res.data.avatar}     \n            })\n                .then(res => {\n                    console.log(res);\n                    dispatch(startNewChatSuccess());\n                    dispatch(subscribeToRooms(currentUser));\n                })\n                .catch(err => {\n                    console.log(err);\n                    dispatch(startNewChatFailed(err));\n                });\n            })\n            .catch(err => console.log(err));\n    }\n}\nexport const joinRoom = roomId => {\n    return dispatch => {    \n        currentUser.joinRoom({ roomId })\n            .then(room => {\n                console.log(`Joined room with ID: ${room.id}`)\n            })\n            .catch(err => {\n                console.log(`Error joining room ${roomId}: ${err}`)\n            })\n    }\n}\n\nexport const deleteChat = roomId => {\n    return dispatch => {\n        console.log(typeof roomId)\n        currentUser.leaveRoom({ roomId: roomId })\n        .then(() => {\n          console.log(`Deleted room with ID: ${roomId}`);\n          //dispatch(subscribeToRooms());\n        //   dispatch(chatInitSuccess());\n        })\n        .catch(err => {\n          console.log(`Error deleted room ${roomId}: ${err}`)\n        });\n    }\n}","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    let inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid);\n    }\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                name={props.name}\n                onChange={props.changed} />;\n            break;\n        case ( 'textarea' ):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n            break;\n        case ( 'select' ):\n            inputElement = (\n                <select\n                    className={inputClasses.join(' ')}\n                    value={props.value}\n                    onChange={props.changed}>\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n        default:\n            inputElement = <input\n                className={classes.InputElement}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div  className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;","import React from 'react';\nimport { endCall } from '../store/actions/actionIndex';\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n\nexport const checkValidity = (value, rules) => {\n    \n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}\n\nexport const getSVG = (name, fill, height, width) => {\n    switch(name) {\n        case 'video':\n            return (\n                <svg id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 16 20\" width={width} height={height}>\n                    <path fill={fill} fillOpacity=\".4\" d=\"M15.243 5.868l-3.48 3.091v-2.27c0-.657-.532-1.189-1.189-1.189H1.945c-.657 0-1.189.532-1.189 1.189v7.138c0 .657.532 1.189 1.189 1.189h8.629c.657 0 1.189-.532 1.189-1.189v-2.299l3.48 3.09v-8.75z\" />\n                </svg>\n            );\n        case 'voice':\n            return (\n                <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 -256 1792 1792\"\n                id=\"svg3013\"\n                version=\"1.1\"\n                width={width}\n                height={height}\n                >\n                    <path\n                    transform=\"matrix(1,0,0,-1,159.45763,1293.0169)\"\n                    d=\"m 1408,296 q 0,-27 -10,-70.5 Q 1388,182 1377,157 1356,107 1255,51 1161,0 1069,0 1042,0 1016.5,3.5 991,7 959,16 927,25 911.5,30.5 896,36 856,51 816,66 807,69 709,104 632,152 504,231 367.5,367.5 231,504 152,632 104,709 69,807 66,816 51,856 36,896 30.5,911.5 25,927 16,959 7,991 3.5,1016.5 0,1042 0,1069 q 0,92 51,186 56,101 106,122 25,11 68.5,21 43.5,10 70.5,10 14,0 21,-3 18,-6 53,-76 11,-19 30,-54 19,-35 35,-63.5 16,-28.5 31,-53.5 3,-4 17.5,-25 14.5,-21 21.5,-35.5 7,-14.5 7,-28.5 0,-20 -28.5,-50 -28.5,-30 -62,-55 -33.5,-25 -62,-53 -28.5,-28 -28.5,-46 0,-9 5,-22.5 5,-13.5 8.5,-20.5 3.5,-7 14,-24 10.5,-17 11.5,-19 76,-137 174,-235 98,-98 235,-174 2,-1 19,-11.5 17,-10.5 24,-14 7,-3.5 20.5,-8.5 13.5,-5 22.5,-5 18,0 46,28.5 28,28.5 53,62 25,33.5 55,62 30,28.5 50,28.5 14,0 28.5,-7 14.5,-7 35.5,-21.5 21,-14.5 25,-17.5 25,-15 53.5,-31 28.5,-16 63.5,-35 35,-19 54,-30 70,-35 76,-53 3,-7 3,-21 z\"\n                    id=\"path3017\"\n                    fill={fill} fillOpacity=\".4\"\n                    />\n                </svg>\n            );\n        case 'ellipsis':\n            return (\n                <svg id=\"Layer_1\" \n                xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 24 24\" width={width} \n                height={height}>\n                    <path fill={fill}\n                    fillOpacity=\".6\" d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\">\n                    </path>\n                </svg>\n            )\n        case 'endCall':\n            return (\n                <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                width={width} height={height} viewBox=\"0 0 612 612\">\n                    <path d=\"M306,243.525c-40.8,0-79.05,7.65-117.3,17.85v79.05c0,10.199-5.1,17.85-15.3,22.949c-25.5,12.75-48.45,28.051-68.85,48.45\n                        c-5.1,5.101-10.2,7.65-17.85,7.65c-7.65,0-12.75-2.55-17.85-7.65L5.1,348.075c-2.55-5.1-5.1-10.2-5.1-17.85\n                        c0-7.65,2.55-12.75,7.65-17.851c76.5-73.95,183.6-119.85,298.35-119.85s221.85,45.9,298.35,119.85\n                        c5.101,5.101,7.65,10.2,7.65,17.851c0,7.649-2.55,12.75-7.65,17.85l-63.75,63.75c-5.1,5.101-10.199,7.65-17.85,7.65\n                        s-12.75-2.55-17.85-7.65c-20.4-17.85-43.351-35.7-68.851-48.45c-7.649-5.1-15.3-12.75-15.3-22.949v-79.05\n                        C385.05,251.175,346.8,243.525,306,243.525z\"\n                        fill={fill}\n                    />\n                </svg>\n\n            )\n        case 'microphone':\n            return (\n                <svg id=\"Layer_1\" \n                xmlns=\"http://www.w3.org/2000/svg\" \n                viewBox=\"0 0 12 20\" width={width} height={height}>\n                <path fill={fill} d=\"M6 11.745a2 2 0 0 0 \n                2-2V4.941a2 2 0 0 0-4 0v4.803a2 2 0 0 0 2 \n                2.001zm3.495-2.001c0 1.927-1.568 3.495-3.495 \n                3.495s-3.495-1.568-3.495-3.495H1.11c0 2.458 \n                1.828 4.477 4.192 4.819v2.495h1.395v-2.495c2.364-.342 4.193-2.362 \n                4.193-4.82H9.495v.001z\" />\n                </svg>\n            )\n        default:\n            return;\n    }\n}","import React from 'react';\nimport classes from './ErrorBox.module.css'\n\nconst errorBox = error => {\n    let errorMessage = '';\n      if (error.error) {\n        const { data } = error.error.response; \n        if (data.password) {\n          errorMessage = data.password;\n        } else if (data.password2) {\n          errorMessage = data.password2;\n        } else if (data.name) {\n          errorMessage = error.name;\n        } else if (data.authError) {\n          errorMessage = data.authError;\n        } else if (data.username) {\n          errorMessage = data.username\n        }\n      } else {\n        errorMessage = error.message\n      }\n    return (\n        <div className={classes.ErrorBox}>\n            { errorMessage }\n        </div>\n    )\n}\n\nexport default errorBox;","import React, { Component } from 'react';\r\nimport classes from './Register.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/actionIndex';\r\nimport Input from '../../UI/Input/Input';\r\nimport { checkValidity, updateObject} from '../../../shared/utility';\r\nimport Button from '../../UI/Button/Button';\r\nimport ErrorBox from '../../UI/ErrorBox/ErrorBox'\r\n\r\nclass Register extends Component {\r\n\r\n    state = {\r\n      controls: {\r\n       name: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n            placeholder: 'Enter your full name',\r\n            type: 'text'\r\n          },\r\n          value: '',\r\n          validation: {\r\n            required: true\r\n          },\r\n          valid: false,\r\n          touched: false\r\n        },\r\n        email: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: 'Enter your email',\r\n                type: 'email'\r\n            },\r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                isEmail: true\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        username: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n              placeholder: 'Enter username',\r\n              type: 'text'\r\n          },\r\n          value: '',\r\n          validation: {\r\n              required: true\r\n          },\r\n          valid: false,\r\n          touched: false\r\n      },  \r\n        password: {\r\n            elementType: 'input',\r\n            elementConfig: {\r\n                placeholder: 'Enter your password',\r\n                type: 'password'\r\n            }, \r\n            value: '',\r\n            validation: {\r\n                required: true,\r\n                minLength: 8\r\n            },\r\n            valid: false,\r\n            touched: false\r\n        },\r\n        password2: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n              placeholder: 'Confirm your password',\r\n              type: 'password'\r\n          }, \r\n          value: '',\r\n          validation: {\r\n              required: true,\r\n              minLength: 8,\r\n              isEqual: false\r\n          },\r\n          valid: false,\r\n          touched: false\r\n      }\r\n           },\r\n        formIsValid: false,\r\n        loading: false\r\n  }\r\n\r\n  onChange = (event, inputIdentifier) => {\r\n    const { value } = event.target;\r\n    const updatedFormElement = updateObject(this.state.controls[inputIdentifier], {\r\n      value: value,\r\n      touched: true,\r\n      valid: checkValidity(value, this.state.controls[inputIdentifier].validation)\r\n  })\r\n  const updatedForm = updateObject(this.state.controls, {\r\n      [inputIdentifier]: updatedFormElement\r\n  });\r\n  let formIsValid = true;\r\n  for (let key in updatedForm){\r\n      formIsValid = updatedForm[key].valid && formIsValid;\r\n  }\r\n  this.setState({controls: updatedForm, formIsValid: formIsValid});\r\n  };\r\n\r\n  onSubmit = event => {\r\n    this.setState({ loading: true})\r\n    event.preventDefault();\r\n    let { password, password2} = this.state.controls;\r\n    console.log(password.value, password2.value);\r\n    // if (password.value !== password2.value){\r\n    //   alert('passwords do not match');\r\n    // } else {\r\n    const controls = { ...this.state.controls };\r\n    const data = {};\r\n    for (let control in controls){\r\n      data[control] = controls[control]['value'];\r\n    }\r\n    this.props.onRegister(data);\r\n    // }\r\n    \r\n  };\r\n\r\n  componentDidUpdate () {\r\n    const { loading } = this.state;\r\n    const { error, registrationSuccess, history } = this.props;\r\n    if (registrationSuccess){\r\n      history.push('/login');\r\n    } else if (error && loading){\r\n      this.setState({loading: false})\r\n    }\r\n  }\r\n  render() {\r\n    const { loading, controls, formIsValid } = this.state;\r\n    const { error } = this.props;\r\n    let formElements = [];\r\n    for (let key in controls){\r\n      formElements.push({\r\n        id: key,\r\n        config: controls[key] \r\n      });\r\n    }\r\n    let form = formElements.map(formElement => {\r\n      return <Input \r\n          key={formElement.id} elementType={formElement.config.elementType}\r\n          elementConfig={formElement.config.elementConfig}\r\n          value={formElement.config.value}\r\n          invalid={!formElement.config.valid}\r\n          shouldValidate={formElement.config.validation}\r\n          touched={formElement.config.touched}\r\n          changed={ event => this.onChange(event, formElement.id)}\r\n            />\r\n    })\r\n    return (\r\n      <div className={classes.RegisterBox}>\r\n        <h2> Register </h2>\r\n        {error && <ErrorBox error={error}/>}\r\n        <form onSubmit={this.onSubmit}>\r\n          {form}\r\n          <p onClick={() => this.props.history.push('/login')}>Already signed up?</p>\r\n          <Button btnType='Success' disabled={!formIsValid} >\r\n          {\r\n                loading ? (\r\n                  <>  \r\n                    <span className={classes.LoadingText}>\r\n                      Joining...\r\n                    </span>\r\n                    <i className='fas fa-spinner fa-spin' />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                  Join Now\r\n                  </>\r\n                )\r\n              }\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    registrationSuccess: state.auth.registrationSuccess,\r\n    error: state.auth.error,\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onRegister: data => dispatch(actionCreators.onRegister(data))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport {Redirect} from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport * as actionCreators from '../../../store/actions/actionIndex';\r\nimport classes from './Login.module.css'; \r\nimport Input from '../../UI/Input/Input';\r\nimport { checkValidity, updateObject } from '../../../shared/utility';\r\nimport Button from '../../UI/Button/Button'; \r\nimport ErrorBox from '../../UI/ErrorBox/ErrorBox';\r\nimport swal from 'sweetalert2';\r\n\r\nclass Login extends Component {\r\n\r\n  state = {\r\n      controls: {\r\n        email: {\r\n          elementType: 'input',\r\n          elementConfig: {\r\n              placeholder: 'Enter your email',\r\n              type: 'email'\r\n          },\r\n          value: '',\r\n          validation: {\r\n              required: true,\r\n              isEmail: true\r\n          },\r\n          valid: false,\r\n          touched: false\r\n      },\r\n      password: {\r\n        elementType: 'input',\r\n        elementConfig: {\r\n            placeholder: 'Enter your password',\r\n            type: 'password'\r\n        }, \r\n        value: '',\r\n        validation: {\r\n            required: true,\r\n            minLength: 8\r\n        },\r\n        valid: false,\r\n        touched: false\r\n    }\r\n      },\r\n      formIsValid: false,\r\n      loading: false\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    const { error } = this.props;\r\n    const { loading } = this.state;\r\n    if (error && loading){\r\n      this.setState({loading: false})\r\n    }\r\n  }\r\n\r\n  onChange = (event, inputIdentifier) => {\r\n    const { value } = event.target;\r\n    const updatedFormElement = updateObject(this.state.controls[inputIdentifier], {\r\n      value: value,\r\n      touched: true,\r\n      valid: checkValidity(value, this.state.controls[inputIdentifier].validation)\r\n    });\r\n    const updatedForm = updateObject(this.state.controls, {\r\n      [inputIdentifier]: updatedFormElement\r\n    });\r\n    let formIsValid = true;\r\n  for (let key in updatedForm){\r\n      formIsValid = updatedForm[key].valid && formIsValid;\r\n  }\r\n  this.setState({controls: updatedForm, formIsValid: formIsValid});\r\n  };\r\n\r\n  onSubmit = e => {\r\n    const { onLogIn } = this.props;\r\n    this.setState({ loading: true})\r\n    e.preventDefault();\r\n    const controls = {...this.state.controls}\r\n    const data = {};\r\n    for (let control in controls){\r\n      data[control] = controls[control]['value'];\r\n    }\r\n    onLogIn(data);\r\n  };\r\n\r\n  comingSoon = () => {\r\n    swal.fire({\r\n      title: 'Coming soon',\r\n      icon: 'info',\r\n      showCloseButton: true,\r\n      focusConfirm: false,\r\n      confirmButtonText:\r\n        '<i class=\"fa fa-thumbs-up\"></i> Great!'\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { loading, controls, formIsValid } = this.state;\r\n    const { error, isLoggedIn, history } = this.props\r\n    let redirect = null;\r\n    if (isLoggedIn){\r\n      redirect = <Redirect to=\"/\"/>;\r\n    }\r\n    let formElements = [];\r\n    for (let key in controls){\r\n      formElements.push({\r\n        id: key,\r\n        config: controls[key]\r\n      });\r\n    }\r\n    const form = formElements.sort((a,b) => a.id.localeCompare(b.id)).map(formElement => {\r\n      return <Input \r\n                key={formElement.id} elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={ event => this.onChange(event, formElement.id)}\r\n            />\r\n    })\r\n    return (\r\n      <div className={classes.Login}>\r\n      {redirect}\r\n        <h2> Login </h2>\r\n        { error && <ErrorBox error={error}/> }\r\n          <form onSubmit={this.onSubmit}>\r\n            {form}\r\n            <span className={classes.AuthOptions}>\r\n              <p onClick={() => history.push('/register')}>New to PiperChat?</p>\r\n              <p>Forgot Password?</p>\r\n            </span>\r\n            <Button btnType='Success' disabled={!formIsValid}>\r\n            {\r\n                loading ? (\r\n                  <>  \r\n                    <span className={classes.LoadingText}>\r\n                      Logging in...\r\n                    </span>\r\n                    <i className='fas fa-spinner fa-spin' />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                  Login\r\n                  </>\r\n                )\r\n              }\r\n            </Button>\r\n          </form>\r\n          <hr />\r\n          <div className={classes.LoginOptions}>\r\n            <h3>Login With</h3>\r\n            <span className={classes.LoginOptionsIcons}>\r\n              <span onClick={this.comingSoon}><i className='fab fa-linkedin' /></span>\r\n              <span onClick={this.comingSoon}><i className='fab fa-google' /></span>\r\n              <span onClick={this.comingSoon}><i className='fab fa-facebook' /></span>\r\n            </span>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.auth.token !== null,\r\n    error: state.auth.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onLogIn: (data) => dispatch(actionCreators.onLogIn(data))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../../store/actions/actionIndex';\n\nclass Logout extends Component {\n    componentDidMount(){\n        this.props.logout();\n        this.props.history.push(\"/\")\n    }\n    render() {\n        return (\n            <div></div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actionCreators.onLogout())\n    }\n}\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport classes from \"./Navbar.module.css\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { isLoggedIn } = this.props;\r\n    let displayedElements = (\r\n      <ul>\r\n        <div>\r\n          <li>\r\n            <Link to=\"/\">\r\n              <div className={classes.Brand}>\r\n                PiperChat\r\n              </div>\r\n              </Link>\r\n          </li>\r\n        </div>\r\n        <div className={classes.FloatedRight}>\r\n          <li>\r\n              <Link to=\"/login\">\r\n                <div className={classes.NavItem}>\r\n                  Login\r\n                </div>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/register\">\r\n                <div className={classes.NavItem}>\r\n                  Join Now\r\n                </div>\r\n              </Link>\r\n            </li>\r\n        </div>  \r\n      </ul>);\r\n        if (isLoggedIn){\r\n          displayedElements = (<ul>\r\n          <li>\r\n            <Link to=\"/\">\r\n              <div className={classes.Brand}>\r\n               PiperChat\r\n              </div>\r\n              </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/logout\">\r\n              <div className={classes.NavItem}>\r\n                Logout\r\n              </div>\r\n            </Link>\r\n          </li>\r\n          </ul>\r\n        );\r\n        }\r\n    return (\r\n      <div className={classes.Navbar} style={ isLoggedIn ? {display: 'none' } : null}>\r\n        {displayedElements}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoggedIn: state.auth.token !== null\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport classes from './OptionsDropbar.module.css';\nimport * as chatActionCreators from '../../../store/actions/actionIndex';\n\nclass OptionsDropbar extends Component {\n\n    state = {\n        options: this.props.options || []\n    }\n    componentDidMount () {\n        document.addEventListener('click', this.hideOptions);\n        window.onresize = this.props.hideOptions;\n    }\n    hideOptions = event => {\n        if (this.optionsRef && !this.optionsRef.contains(event.target)){\n            this.props.hideOptions();\n        }\n    }\n    componentWillUnmount(){\n        document.removeEventListener('click', this.hideOptions);\n    }\n    optionClicked = (event, option) => {\n        switch(option.name){\n            case 'Archive chat':\n                alert('Archive chat');\n                break;\n            case 'Mute': \n                alert('Mute');\n                break;\n            case 'Exit group':\n                this.props.deleteChat(this.props.roomId)\n                break;\n            case 'Delete chat':\n                this.props.deleteChat(this.props.roomId);\n                break;\n            case 'Log out':\n                this.props.history.push('/logout');\n                break;\n            case 'Profile':\n                this.props.showProfile();\n                this.props.hideOptions();\n                break;\n            default:\n                break;\n        }\n    }\n    render(){\n        let options = null;\n        if (this.props.show){\n            options = (\n                <ul ref={ ul => this.optionsRef = ul} className={classes.OptionsDropbar} style={{top: this.props.position.y  + 'px',\n                left: this.props.position.x - 155 + 'px'\n                }}>\n                    {this.state.options.map((option, i) => {\n                        return <li key={option.name} onClick={ e => this.optionClicked(e, option)} >{option.name}</li>\n                    })}\n                </ul>\n            )\n        }\n        return options;\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteChat: roomId => dispatch(chatActionCreators.deleteChat(roomId))\n    }\n}\nexport default withRouter(connect(null, mapDispatchToProps)(OptionsDropbar));","import React, { useState } from 'react';\nimport moment from 'moment';\nimport classes from './Contact.module.css';\nimport img from '../../assets/images/p37605.png'\nimport { connect } from 'react-redux';\nimport OptionsDropbar from '../../components/UI/OptionsDropbar/OptionsDropbar';\n\nconst contact = props => {\n    const [showOptions, toggleShowOptions] = useState(false);\n    const [position, updatePosition] = useState({});\n    // console.log(moment(\"2010-01-01T05:06:07\").getDate().toString());\n    const formatDate = date => {\n        moment.updateLocale('en', {\n            calendar : {\n                lastDay : '[Yesterday]',\n                sameDay : 'LT',\n                nextDay : '[Tomorrow at] LT',\n                lastWeek : 'dddd',\n                nextWeek : 'dddd [at] LT',\n                sameElse : 'L'\n            }\n        });\n        return moment(date).calendar()\n    }\n    // console.log(formatDate(\"2019-11-24T05:06:07\"));\n    const showOptionsHandler = event => {\n        event.stopPropagation();\n        let pos = {};\n        pos.x = event.clientX + 155;\n        pos.y = event.clientY;\n        toggleShowOptions(true);\n        updatePosition(pos)\n    }\n    const hideOptions = () => {\n        toggleShowOptions(false);\n        updatePosition({})\n    }\n    let attachedClasses = [classes.Contact];\n    let unreadMessages = \"\";\n    if (props.Active){\n        attachedClasses.push(classes.Active); \n    }\n    if (props.unopenedMessages[props.id]){\n        unreadMessages = props.unopenedMessages[props.id].length;\n    }\n    let contact = null;\n    if (props.room){\n        contact = (\n            <div className={attachedClasses.join(' ')} onClick={props.clicked}>\n                <span className={classes.ImageContainter}><img src={img} alt=''/></span>\n                <div className={classes.ContactDetails}>\n                    <div className={classes.FloatedLeft}>\n                        <span>{props.room.name}</span>\n                        <span className={classes.LastMessage}>Honey: Love you too babe.{/*props.lastMessage*/}</span>\n                    </div>\n                    <div className={classes.FloatedRight}>\n                        <span className={classes.LastUpdated}>{formatDate(props.room.updatedAt)}</span>\n                        <div className={classes.UnreadMessagesContainer}>\n                            <span className={classes.UnreadMessages}>{unreadMessages || 8}</span>\n                            <i onClick={showOptionsHandler} className=\"fa fa-angle-down\"></i>\n                            { showOptions && \n                                <OptionsDropbar position={position} \n                                roomId={props.room.id}\n                                show={showOptions} \n                                hideOptions={hideOptions}\n                                options={[{name: 'Archive chat'},\n                                {name: 'Mute'},\n                                {name: !props.room.isPrivate ? 'Exit group':'Delete chat'},\n                                {name: 'Pin chat'},\n                                {name: 'Mark as unread'}\n                                ]}\n                                />\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return contact; \n}\nconst mapStateToProps = state => {\n    return {\n         userId: state.auth.userId\n    }\n}\nexport default connect(mapStateToProps)(contact);","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as chatActionCreators from '../../../../../store/actions/actionIndex';\nimport classes from './JoinableRoom.module.css';\n\nconst joinableRoom = props => {\n    return (\n    <span onClick={props.joinRoom(props.id)} className={classes.JoinableRoom}>\n        <img src={props.groupImage} alt='' />\n        <span>\n            <p>{props.name}</p>\n            <p>{props.lastMessage}</p>\n        </span>\n    </span>\n    )\n}\n\nconst mapDispatchtoProps = dispatch => {\n    return {\n        joinRoom: id => dispatch(chatActionCreators.joinRoom(id))\n    }\n}\nexport default connect(null,mapDispatchtoProps)(joinableRoom);","import React from 'react';\nimport classes from './TabBar.module.css';\n\nconst tabBar = ({ goBack, tabName }) => (\n    <div className={classes.TabBar}>\n        <i className='fa fa-arrow-left' onClick={goBack}/>\n        <span>{tabName}</span>\n    </div>\n)\n\nexport default tabBar;","import React, {Component} from 'react'; \nimport classes from './SideDrawer.module.css';\nimport { connect } from 'react-redux';\nimport JoinableRooms from './JoinableRooms/JoinableRooms';  \nimport * as actionCreators from '../../../store/actions/actionIndex';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport TabBar from '../TabBar/TabBar';\n\n\nclass SideDrawer extends Component {\n    state = {\n        showCreateForm: false,\n        showNewChatForm: false,\n        groupName: '',\n        participants: [],\n        potentialParticipants: [],\n        newGroupChatParticipants: {},\n        privateChatParticipant: '',\n        joinableRooms: [],\n        ShowJoinableRoomsList: false,\n        touched: false,\n        isValid: false\n    }\n    createNewGroupHandler = () => {\n        let potentialParticipants = this.props.user.rooms.filter(user => user.isPrivate && user.name !== this.props.userId);\n        let chatParticipants = {};\n        potentialParticipants.forEach(pp => chatParticipants[pp.name] = false);\n        this.setState(prevState => {\n            return {\n            showCreateForm: !prevState.showCreateForm, \n            potentialParticipants, \n            ShowJoinableRoomsList: false,\n            showNewChatForm: false,\n            newGroupChatParticipants: chatParticipants \n            }\n        });\n        \n    }\n    onChange = (event) => {\n        this.setState({[event.target.name]: event.target.value});\n    }\n    onCreateNewGroup = event => {\n        event.preventDefault();\n        let obj = {...this.state.newGroupChatParticipants};\n        let participants = Object.keys(obj).filter(j => obj[j]);\n        this.props.onCreateNewGroup({participants, name: this.state.groupName});\n        this.setState({groupName: '', newGroupChatParticipants: {}});\n    }\n    startNewChatHandler = () => {\n        this.setState(prevState => {\n            return {\n            showNewChatForm: !prevState.showNewChatForm, \n            ShowJoinableRoomsList: false, \n            showCreateForm: false\n        }})\n        \n    }\n    onStartNewChat = event => {\n        event.preventDefault();\n        let data = {chatParticipant: this.state.privateChatParticipant};\n        this.props.onStartNewChat(data);\n    }\n    joinGroup = () => {\n        this.props.user.getJoinableRooms()\n        .then(rooms => {\n            this.setState(prevState => {\n                return {\n                    joinableRooms: rooms, \n                    ShowJoinableRoomsList: !prevState.ShowJoinableRoomsList,\n                    showCreateForm: false,\n                    showNewChatForm: false\n                }\n            });\n            \n        })\n        .catch(err => {\n            console.log(`Error getting joinable rooms: ${err}`)\n        })\n    }\n    onPPChange = event => {\n        let { name, checked } = event.target;\n        let groupParticipants = {...this.state.newGroupChatParticipants};\n        groupParticipants[name] = checked;\n        this.setState({newGroupChatParticipants: groupParticipants});\n    } \n    render (){\n        let attachedClasses = [classes.SideDrawer, classes.Close];\n        if (this.props.show){\n            attachedClasses = [classes.SideDrawer, classes.Open];\n        }\n       return  (\n            <div className={attachedClasses.join(' ')}>\n                <TabBar goBack={this.props.hideSideDrawer} tabName={this.props.actionType} />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreateNewGroup: data => dispatch(actionCreators.createNewGroup(data)),\n        onStartNewChat: data => dispatch(actionCreators.startNewChat(data)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SideDrawer);","import React, { useState } from 'react';\nimport classes from './NoContacts.module.css'\nimport SideDrawer from '../UI/SideDrawer/SideDrawer';\n\nconst noContacts = props => {\n    const [showSideDrawer, toggleShowSideDrawer] = useState(false);\n    const [actionType, updateActionType] = useState('');\n\n    const actionClickedHandler = actionType => {\n        toggleShowSideDrawer(prevState => !prevState);\n        updateActionType(actionType);\n    }\n    return (\n        <div className={classes.NoContacts}>\n            <span>You have no contacts</span>\n            <div className={classes.UserActions}>\n                <span className={classes.UserAction} onClick={() => actionClickedHandler('Add contact')}>\n                    <span className={classes.ActionsIcons}><i className=\"fas fa-search\" /></span>\n                    <span>Add Contact</span>\n                </span>\n                <span className={classes.UserAction} onClick={() => actionClickedHandler('Create a group')}>\n                <span className={classes.ActionsIcons}><i className=\"fas fa-users\" /></span>\n                <span>Create a group</span>\n                </span>\n            </div>\n            <SideDrawer show={showSideDrawer} actionType={actionType} hideSideDrawer={() => toggleShowSideDrawer(false)} />\n        </div>\n    )\n}\n\nexport default noContacts;","import React from 'react';\nimport classes from './Chat.module.css';\n\n\nconst chat = props => {\n    let attachedClasses = [classes.Chat];\n    if (props.byCurrentUser){\n        attachedClasses = [classes.ByCurrentUser];\n    }\n    return (\n        // <div className={classes.Wrapper} style={{position: 'relative'}}>\n            <div className={attachedClasses.join('')}>\n                <li>\n                    <span className={classes.Sender}>{props.sender}</span>\n                    <br />\n                    <span className={classes.Text}>{props.text}</span>\n                </li>        \n            </div>\n        // </div>\n    )\n}\n\nexport default chat;","import React, { Component} from 'react';\nimport swal from 'sweetalert2';\n\nimport TabBar from '../UI/TabBar/TabBar';\n\nimport classes from './Profile.module.css';\nimport placeholderImage from '../../assets/images/p37605.png';\n\nclass Profile extends Component {\n    state = {}\n\n    comingSoon = () => {\n        swal.fire({\n          title: 'Coming soon',\n          icon: 'info',\n          showCloseButton: true,\n          focusConfirm: false,\n          confirmButtonText:\n            '<i class=\"fa fa-thumbs-up\"></i> Great!'\n        })\n    }\n\n    render(){\n        const { hideProfile } = this.props;\n        let attachedClasses = [classes.Profile, classes.Close];\n        if (this.props.show){\n            attachedClasses = [classes.Profile, classes.Open];\n        }\n        return (\n            <div className={attachedClasses.join(' ')}>\n                <TabBar goBack={hideProfile} tabName='Profile' />\n                <div className={classes.ProfileImageContainer}>\n                    <div className={classes.ProfileImage}>\n                        <img src={placeholderImage} alt='' />\n                        <span className={classes.ChangeImage}>\n                            <span className={classes.CameraIcon}><i className='fa fa-camera' /></span>\n                        <span className={classes.ChangeImageText}>Change Profile Photo</span>\n                    </span>\n                    </div>\n                </div>\n                <div className={classes.Names}>\n                    <span className={classes.Name}>Abubakar Ibrahim</span>\n                    <span className={classes.Username}>@abkr08</span>\n                </div>\n                <hr />\n                <div className={classes.About}>\n                    <h3>Intro</h3>\n                    <hr />\n                    <span>Write awesome things About Yourself here.</span>\n                </div>\n                <hr />\n                <div className={classes.SocialProfiles}>\n                    <h3>Social Profiles</h3>\n                    <hr />\n                    <div className={classes.SocialIcons}>\n                        <span onClick={this.comingSoon}><i className='fab fa-instagram' /></span>\n                        <span onClick={this.comingSoon}><i className='fab fa-twitter' /></span>\n                        <span onClick={this.comingSoon}><i className='fab fa-facebook' /></span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Profile;","import React from 'react';\nimport classes from './Modal.module.css';\nconst  modal = ({ show, children }) => {\n        return show ? (\n            <div className={classes.Modal}>{children}</div>\n        ) : null;\n}\n\nexport default modal;","import React, { Component} from 'react';\nimport swal from 'sweetalert2';\nimport classes from './Call.module.css';\nimport { connect } from 'react-redux';\nimport * as callActionCreators from '../../store/actions/actionIndex'\nimport { getSVG } from '../../shared/utility';\n\n\nclass Call extends Component {\n    \n    state = {\n          id: null,\n          room: null,\n          isPlaying: false\n    }\n       \n    componentDidMount (){\n        if (this.props.role === 'callee'){\n            this.setState({room: this.props.caller});\n        } else {\n            this.props.callUser(this.props.callTo, this.props.callType);\n            this.setState({room: this.props.callTo});\n        }\n        this.props.channel.on('message', data => {\n            if (JSON.parse(data).type === 'leave'){\n                if (!this.props.role){\n                    this.props.closeModal();\n                }\n            }\n        })\n    }\n       \n    \n    endCall = () => {\n        this.setState({room: null});\n        this.props.endCall();\n        if (!this.props.role){\n            this.props.closeModal();\n        }\n    }\n    \n   \n    \n    \n    async componentDidUpdate () {\n        const { \n            error, endCall, closeModal, \n            callType, localStream, \n            remoteStream \n        } = this.props;\n        \n        if (callType === 'video'){\n            this.localVideoRef.srcObject = remoteStream ? localStream : null;\n            this.remoteVideoRef.srcObject = remoteStream ? remoteStream : localStream;\n        } else {\n            this.localAudioRef.srcObject = localStream;\n            this.remoteAudioRef.srcObject = remoteStream;\n        }\n        if (error){\n            const confirmed = await swal.fire({\n                title: error.toString(),\n                icon: 'error',\n                showCloseButton: true,\n            });\n            if (confirmed.value){\n                endCall();\n                closeModal();\n            }\n        }\n    }\n       \n    render () { \n        const { callType, remoteStream, localStream } = this.props;\n        // if(this.remoteVideoRef){console.log(this.remoteVideoRef, this.remoteVideoRef.src)};\n        let call = null;\n        if (callType === 'video'){\n            call = (\n                <React.Fragment>\n                    <div className={classes.videoContainer}>\n                        <video className={classes.LocalVideo} autoPlay muted  \n                            ref={(lVid)=> this.localVideoRef = lVid}>\n                        </video>\n\n                        <video className={classes.RemoteVideo} autoPlay muted={!remoteStream}\n                        ref={(rVid)=> this.remoteVideoRef = rVid}>\n                        </video>\n                    </div>\n                    { (localStream || remoteStream) &&\n                        <div className={classes.CallButtons}>\n                            <span  onClick={this.endCall} \n                            className={classes.EndCallBtn}>\n                                {getSVG('endCall', 'white', '50', '50')}\n                            </span>\n                            <span  onClick={this.endCall} \n                            className={classes.MuteBtn}>\n                            {getSVG('microphone', 'white', '50', '50')}\n                            </span>\n                        </div>\n                    }\n                </React.Fragment>\n            );\n        } else {\n            call = (\n                <React.Fragment>\n                    <audio autoPlay src={this.props.localStream} muted ref={audio => this.localAudioRef = audio} />\n                    <audio autoPlay src={this.props.remoteStream} ref={audio => this.remoteAudioRef = audio} />\n                </React.Fragment>\n            )\n        }\n        return (\n            <div className={classes.Call}>\n                {call}\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId,\n        channel: state.call.channel,\n        remoteStream: state.call.remoteStream,\n        localStream: state.call.localStream,\n        incomingCall: state.call.incomingCall,\n        caller: state.call.caller,\n        error: state.call.error\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        callUser: (user, callType) => dispatch(callActionCreators.callUser(user, callType)),\n        endCall: () => dispatch(callActionCreators.endCall())\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Call);","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport classes from './ChatScreenBar.module.css';\nimport Modal from '../../containers/Modal/Modal';\nimport Call from '../../containers/Call/Call';\nimport OptionsDropbar from '../UI/OptionsDropbar/OptionsDropbar';\nimport { getSVG } from '../../shared/utility';\n\nclass ChatScreenBar extends Component {\n    state = {\n        showModal: false,\n        isVideo: false,\n        callType: '',\n        showOptions: false,\n        position: {}\n    }\n    \n    onVideoCallInit = () => {\n            this.setState({showModal: true, callType: 'video', isVideo: true});\n    }\n\n    onVoiceCallInit = () => {\n        this.setState({showModal: true, isVideo: false, callType: 'audio'});\n    }\n\n    showOptions = event => {\n        let pos = {...this.state.position};\n        pos.x = event.clientX;\n        pos.y = event.clientY;\n        this.setState({showOptions: true, position: pos})\n    }\n    hideOptions = () => {\n        this.setState({showOptions: false, position:{}})\n    }\n    \n    endCall = () => {\n        this.setState({showModal: false})\n    }\n    render() {\n        let optionsDropbar = null;\n        if (this.state.showOptions){\n           optionsDropbar = (\n                <OptionsDropbar hideOptions={this.hideOptions} \n                position={this.state.position} \n                show={this.state.showOptions} \n                options={[{name: 'Contact info'},\n                {name: 'Select messages'},\n                {name: 'Mute'},\n                {name: 'Clear messages'},\n                {name: 'Delete chat'}\n                ]}\n                />\n           )\n              \n        }\n        return (\n            <div className={classes.ChatScreenBar}>\n                <div className={classes.FloatedRight}>\n                   <img src={this.props.room.customData.displayImage} alt=''/>\n                   <span className={classes.RoomDetails}>\n                    <span className={classes.RoomName}>{this.props.room.name}</span>\n                    { !this.props.room.isPrivate &&\n                        (<span className={classes.RoomMembers}>\n                            Ahmed, Aunty Hauwa, Aunty Lami, Hajju\n                        </span>)\n                    }\n                   </span>\n               </div>\n               <div className={classes.FA}>\n                    {  this.props.room.isPrivate &&  \n                    <>\n                        <span onClick={this.onVideoCallInit}>\n                        {getSVG('video', '#263238', '28', '24')}\n                        </span>\n                        <span onClick={this.onVoiceCallInit}>\n                            {getSVG('voice', '#263238', '24', '24')}\n                        </span>\n                    </>\n                    }\n                    <span onClick={this.showOptions}>\n                        {getSVG('ellipsis', '#263238', '24', '24')}\n                    </span>\n                    {optionsDropbar}\n                </div>\n                <Modal show={this.state.showModal}>\n                    {this.state.callType ? \n                        <Call callTo={this.props.room.name} closeModal={this.endCall} callType={this.state.callType}/> : \n                        null\n                    }\n                </Modal>\n            </div>\n        )\n    } \n}\nconst mapStateToProps = state => {\n    return {\n        callEnded: state.call.callEnded,\n        callStarted: state.call.callOngoing\n    }\n}\n export default connect(mapStateToProps)(ChatScreenBar);","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = prop => (<div className={classes.Spinner}></div>);\n\nexport default spinner;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreators from '../../store/actions/actionIndex'\n\nimport classes from './Search.module.css';\n\nclass Search extends Component {\n    state = {\n        showSubmitButton: false,\n        showBackBtn: false,\n        searchText: ''\n    }\n\n    // show back button when label is clicked\n    labelClickedHandler = () => this.setState({ showBackBtn: true})\n\n    // Update text\n    onChange = e => this.setState({ searchText: e.target.value })\n\n    // Submit text\n    onSubmit = () => {\n        const { searchText } = this.state;\n        let data = { chatParticipant: searchText };\n        this.props.onStartNewChat(data);\n    }\n\n    render(){\n        const { searchText, showBackBtn } = this.state;\n        return (\n            <div className={classes.Search}>\n                <label className={classes.SearchLabel} onClick={this.labelClickedHandler}>\n                    <span className={classes.SearchBtn}><i className='fa fa-search' /></span>\n                    <input value={searchText} type='text' onChange={this.onChange} placeholder='Search contacts' />\n                </label>\n                { showBackBtn && \n                    <span className={classes.BackBtn}>\n                        <i className='fa fa-arrow-left' />\n                    </span>\n                }\n                { searchText.length > 2 && \n                        <span className={classes.SubmitBtn} onClick={this.onSubmit}>\n                            <i className='fa fa-check' />\n                        </span>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onStartNewChat: data => dispatch(actionCreators.startNewChat(data))\n    }\n}\nexport default connect(null, mapDispatchToProps)(Search);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Contact from './Contact';\nimport NoContacts from '../../components/NoContacts/NoContacts'\nimport Chat from './Chat';\nimport classes from './ChatScreen.module.css';\nimport Profile from '../../components/Profile/Profile';\nimport ChatScreenBar from '../../components/ChatScreenBar/ChatScreenBar';\nimport Modal from '../Modal/Modal';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport * as actionCreators from '../../store/actions/actionIndex';\nimport OptionsDropbar from '../../components/UI/OptionsDropbar/OptionsDropbar';\nimport Search from '../../components/Search/Search';\n\nimport placeholderImage from '../../assets/images/p37605.png'\n\nclass ChatScreen extends Component {\n\n    state = {\n        text: '',\n        showProfile: false,\n        contacts: [], \n        position: {},\n        showOptions: false,\n    }\n    componentDidMount () {\n        this.props.chatInit();\n        this.scrollToBottom();\n    }\n    scrollToBottom = () => {\n       if (this.scrollRef && this.props.messages.length > 0){\n        let lastElement = this.scrollRef.children[this.scrollRef.children.length-1];\n        lastElement.scrollIntoView();\n        console.log(lastElement);\n    }\n}\n    getMessages = room => { \n        this.props.getMessages(room);\n        this.scrollToBottom();\n    }\n\n    onChange = event => {\n        this.setState({text: event.target.value});\n    }\n    onSubmit = event => {\n        event.preventDefault();\n        let data = {\n            text: this.state.text,\n            roomId: this.props.currentRoom.id\n        }\n        this.props.sendMessage(data);\n        this.setState({text: ''});\n    }\n\n   toggleProfile = () => {\n        this.setState(prevState => {\n            return {showProfile: !prevState.showProfile}});\n    }\n\n    componentDidUpdate () {\n        this.scrollToBottom();\n    }\n\n    showOptions = event => {\n        let pos = {...this.state.position};\n        pos.x = event.clientX;\n        pos.y = event.clientY;\n        this.setState({showOptions: true, position: pos})\n    }\n\n    hideOptions = () => {\n        this.setState({showOptions: false, position:{}})\n    }\n\n    render () {\n        let chat = <Modal show={true}>\n                        <Spinner />\n                    </Modal>\n        if (this.props.currentRoom){\n            chat = (\n            <div className={classes.Chat}>\n                <div className={classes.BackgroundImage} />\n                <ChatScreenBar room={this.props.currentRoom} endCall={this.props.endCall}/>\n                <div className={classes.Msgs} ref={(div) => {this.scrollRef = div}}>\n                {\n                    this.props.messages.map(msg => {\n                        return (\n                            <Chat sender={msg.senderId} byCurrentUser={this.props.userId === msg.senderId}\n                            text={msg.text} key={msg.id} />\n                        )\n\n                    })\n                }\n                </div>\n           \n            <form onSubmit={this.onSubmit}>\n                <input onChange={this.onChange} value={this.state.text} name='text' type=\"text\" placeholder=\"Enter message\" />\n            </form>\n            </div>\n            );\n        } else {\n            chat = (\n                <div className={classes.Chat}></div>\n            );\n        }\n        let optionsDropbar = null;\n        if (this.state.showOptions){\n            optionsDropbar = (\n                <OptionsDropbar hideOptions={this.hideOptions} \n                position={this.state.position} \n                show={this.state.showOptions}\n                showProfile={this.toggleProfile}\n                options={\n                    [\n                        {name: 'New group'},\n                        {name: 'Profile'},\n                        {name: 'Log out'},\n                    ]\n                }\n                />\n            )\n        }\n        let contactsPane = (\n            <Modal show={true}>\n                <Spinner />\n            </Modal>\n        );\n        if (this.props.chatkitUser){\n            contactsPane = (\n                <div className={classes.ContactsPane} >\n                <Profile show={this.state.showProfile}\n                hideProfile={this.toggleProfile}\n                user={this.props.chatkitUser}\n                />\n                <div className={classes.MenuBar}>\n                    <span onClick={this.toggleProfile}\n                    className={classes.MenuImageContainer}\n                    >\n                        <img src={placeholderImage} alt='' />\n                    </span>\n                    <span onClick={this.showOptions}>\n                    <svg id=\"Layer_1\" \n                    xmlns=\"http://www.w3.org/2000/svg\" \n                    viewBox=\"0 0 24 24\" width=\"24\" \n                    height=\"24\"><path fill=\"#263238\" \n                    fillOpacity=\".6\" d=\"M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z\">\n                    </path>\n                    </svg>\n                    </span>\n                    {optionsDropbar}\n                </div>\n                <Search />\n                {\n                    this.props.contacts.length ? this.props.contacts.map(con => {\n                        return <Contact key={con.id} name={con.name} \n                                    room={con}\n                                    user={this.props.userId}\n                                    unopenedMessages={this.props.unopenedMessages}\n                                    Active={this.props.currentRoom ? \n                                        con.id === this.props.currentRoom.id : \n                                        false } \n                                    clicked={() => this.getMessages(con)}\n                                />\n                    }) : (\n                        <NoContacts />\n                    )\n                }\n                </div>\n            );\n            \n        }\n        return (\n            <div className={classes.ChatScreen}>\n                {contactsPane}\n                {chat}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.auth.userId,\n        channel: state.call.channel,\n        chatkitUser: state.chat.currentUser,\n        currentRoom: state.chat.currentRoom,\n        messages: state.chat.messages,\n        endCall: state.call.endCall,\n        unopenedMessages: state.chat.unopenedMessages,\n        contacts: state.chat.contacts\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        chatInit: () => dispatch(actionCreators.chatInit()),\n        getMessages: room => dispatch(actionCreators.getMessages(room)),\n        sendMessage: data => dispatch(actionCreators.sendMessage(data))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatScreen);","import React, { Component } from \"react\";\nimport {Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport IncomingCall from './containers/Call/IncomingCallNotification/IncomingCall';\nimport Register from \"./components/Auth/Register/Register\";\nimport Login from \"./components/Auth/Login/Login\";\nimport Logout from \"./components/Auth/Logout/Logout\";\nimport Navbar from \"./components/UI/Navigation/Navbar\";\nimport ChatScreen from './containers/PiperChat/ChatScreen';\nimport * as actionCreators from './store/actions/actionIndex';\nimport Call from './containers/Call/Call';\nimport \"./App.css\";\nimport Modal from \"./containers/Modal/Modal.js\";\n\nimport ringtone from './assets/audio/iphone_trap_remix.mp3';\n\n\nclass App extends Component {\n\n  state = {\n    showCallNotification: false\n  }\n  componentDidMount() {\n    this.props.onAuth();\n    if (!this.props.isLoggedIn){\n      this.props.history.push('/login')\n    } \n  }\n  \n  componentDidUpdate () {\n    if (this.props.isLoggedIn){\n      if (!this.props.channel){\n        this.props.getCallerReady();\n      }\n    }\n  }\n  acceptCall = () => {\n    this.ringtoneRef.pause();\n    this.ringtoneRef.currentTime = 0;\n    this.props.callAccepted();\n  }\n\n  rejectCall = () => {\n    this.ringtoneRef.pause();\n    this.ringtoneRef.currentTime = 0;\n    this.props.callRejected();\n  }\n  render() {\n    let chatScreen = null;\n      if (this.props.isLoggedIn){\n        if (this.props.incomingCall){\n          this.ringtoneRef.play();\n          chatScreen = (\n            <IncomingCall acceptCall={this.acceptCall}\n              rejectCall={this.rejectCall}\n              caller={this.props.caller}\n              callType={this.props.callType}\n            />\n          );\n      } else if (this.props.callOngoing){\n        chatScreen = (\n          <React.Fragment>\n            <Modal show><Call role='callee' callType={this.props.callType}/></Modal>\n            <ChatScreen />\n          </React.Fragment>\n          );\n      } else {\n        chatScreen = <ChatScreen />\n      }\n    } \n    return (\n        <div>\n          <Navbar />\n          <div className=\"container\">\n            {chatScreen}\n            <audio src={ringtone} loop ref={ ring => this.ringtoneRef = ring } />\n            <Switch>\n              <Route path=\"/register\" component={Register} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/logout\" component={Logout} />\n              { !this.props.isLoggedIn && <Redirect to='/login' />}\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.auth.token !== null,\n    incomingCall: state.call.incomingCall,\n    callType: state.call.callType,\n    channel: state.call.channel,\n    caller: state.call.caller,\n    callOngoing: state.call.callOngoing\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: () => dispatch(actionCreators.checkAuthState()),\n    getCallerReady: () => dispatch(actionCreators.getCallerReady()),\n    callAccepted: () => dispatch(actionCreators.callAccepted()),\n    callRejected: () => dispatch(actionCreators.callRejected())\n  }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actions';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    registrationSuccess: false,\n    error: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ON_AUTH_INIT:\n            return {\n                ...state, error: null\n            }\n        case actionTypes.LOG_IN:\n           return {\n               ...state, token: action.token, userId: action.userId, error: null\n           }\n        case actionTypes.LOG_OUT:\n            return {\n                ...state, token: null, userId: null\n            }\n        case actionTypes.ON_AUTH:\n            return {\n                ...state, token: action.token, userId: action.userId\n            }\n        case actionTypes.ON_REGISTER: \n            return {\n                ...state, registrationSuccess: true\n            }\n        case actionTypes.LOG_IN_FAILED:\n            return {\n                ...state, error: action.error\n            }\n        case actionTypes.ON_REGISTRATION_FAILED:\n            return {\n                ...state, error: action.error\n            }\n        default: \n            return state;\n    }\n}\n\nexport default authReducer;","import * as actionTypes from '../actions/actions';\n\nconst initialState = {\n    channel: null,\n    remoteStream: null,\n    localStream: null,\n    incomingCall: false,\n    callType: null,\n    caller: null,\n    callOngoing: false,\n    callStarted: false,\n    callEnded: false,\n    error: null\n}\n\nconst callReducer = (state = initialState, action) => {\n    \n    switch(action.type){\n        case actionTypes.PREPARE_CALLER: \n            \n            return {\n                ...state,\n                channel: action.channel \n            }\n        case actionTypes.CALL_INIT: \n            return {\n                ...state, callStarted: true, callEnded: false\n            }\n        case actionTypes.ON_TRACK: \n            return {\n                ...state, remoteStream: action.remoteStream\n            }\n        case actionTypes.ON_LOCAL_STREAM:\n            return {\n                ...state, localStream: action.stream\n            }\n        case actionTypes.ON_INCOMING_CALL:\n            return {\n                ...state, incomingCall: true, callType: action.callType, caller: action.caller\n            }\n        case actionTypes.CALL_ACCEPTED: \n            return {\n                ...state, incomingCall: false, callOngoing: true\n            }\n        case actionTypes.CALL_REJECTED: \n            return {\n                ...state, incomingCall: false, callOngoing: false\n            }\n        case actionTypes.END_CALL: \n            return {\n                ...state, callOngoing: false, incomingCall: false, callEnded: true, callStarted: false, error: null\n            }\n        case actionTypes.ON_ERROR:\n            return {\n                ...state, error: action.error\n            }\n        default: \n        return state;\n    }\n}\n\nexport default callReducer;","import * as actionTypes from '../actions/actions';\n\n\nconst initialState = {\n    currentUser: null,\n    contacts: [],\n    currentRoom: null,\n    messages: [],\n    unopenedMessages: {}\n};\n\nconst removeItem = (obj, item) => {\n    return Object.keys(obj).reduce((acc, key) => {\n        if (key !== item) {\n          return {...acc, [key]: obj[key]}\n        }\n        return acc;\n      }, {})\n} \nconst chatReducer = (state = initialState, action) => {\n    switch (action.type){\n        case actionTypes.CHAT_INIT_SUCCESS:\n            return {\n                ...state, currentUser: action.currentUser\n            }\n        case actionTypes.FETCH_MESSAGES_SUCCESS: {\n            return {\n                ...state, messages: action.messages, currentRoom: action.room,\n                unopenedMessages: removeItem(state.unopenedMessages, action.room.id)\n            }\n        }\n        case actionTypes.ON_NEW_MESSAGE: \n            if (action.belongsToCurrentRoom){\n                return {\n                    ...state, messages: [...state.messages, action.message]\n                }\n            } else {\n                let unopenedMessagesCopy = {...state.unopenedMessages};\n                if (unopenedMessagesCopy.hasOwnProperty(action.message.roomId)){\n                    unopenedMessagesCopy[action.message.roomId].push(action.message);\n                } else {\n                    unopenedMessagesCopy[action.message.roomId] = [action.message];\n                }\n                return { \n                    ...state, unopenedMessages: unopenedMessagesCopy\n               }  \n            }\n        case 'ON_ROOMS_FETCHED':\n            return {\n                ...state, contacts: action.contacts\n            }\n        case actionTypes.SUBSCRIPTIONSUCCESSFUL:\n            return {\n                ...state, contacts: action.rooms\n            }\n        default: \n            return state;\n    }\n}\n\nexport default chatReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers  } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\nimport authReducer from './store/reducers/authReducer'\nimport callReducer from './store/reducers/callReducer';\nimport chatReducer from './store/reducers/chatReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    call: callReducer,\n    chat: chatReducer\n})\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__aDuUt\",\"FloatedRight\":\"Navbar_FloatedRight__37wdx\",\"NavItem\":\"Navbar_NavItem__1tVnh\",\"Brand\":\"Navbar_Brand__2R68w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Call\":\"Call_Call__3pF_p\",\"videoContainer\":\"Call_videoContainer__pOd87\",\"RemoteVideo\":\"Call_RemoteVideo__6iJ4d\",\"LocalVideo\":\"Call_LocalVideo__277KJ\",\"CallButtons\":\"Call_CallButtons__3GI_O\",\"EndCallBtn\":\"Call_EndCallBtn__EVTd_\",\"MuteBtn\":\"Call_MuteBtn__25o6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NoContacts\":\"NoContacts_NoContacts__1427s\",\"UserActions\":\"NoContacts_UserActions__2KqL3\",\"UserAction\":\"NoContacts_UserAction__3FYgE\",\"ActionsIcons\":\"NoContacts_ActionsIcons__1QHcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatScreenBar\":\"ChatScreenBar_ChatScreenBar__3nwU6\",\"FloatedRight\":\"ChatScreenBar_FloatedRight__3Wfev\",\"RoomDetails\":\"ChatScreenBar_RoomDetails__5Xqgs\",\"RoomName\":\"ChatScreenBar_RoomName__2r4jw\",\"RoomMembers\":\"ChatScreenBar_RoomMembers__1_yhF\",\"FA\":\"ChatScreenBar_FA__sok0_\"};","module.exports = __webpack_public_path__ + \"static/media/p37605.8335e87d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1qkWX\",\"Label\":\"Input_Label__22HBZ\",\"InputElement\":\"Input_InputElement__3x11B\",\"Invalid\":\"Input_Invalid__2JnXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"Login_Login__2hIs6\",\"AuthOptions\":\"Login_AuthOptions__R7y7_\",\"LoginOptions\":\"Login_LoginOptions__1HYKs\",\"LoginOptionsIcons\":\"Login_LoginOptionsIcons__9erOn\",\"LoadingText\":\"Login_LoadingText__3lTuR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Search_Search__1IDVU\",\"SearchLabel\":\"Search_SearchLabel__gOtCP\",\"SearchBtn\":\"Search_SearchBtn__3zTPm\",\"BackBtn\":\"Search_BackBtn__QXY2H\",\"SubmitBtn\":\"Search_SubmitBtn__K9NOI\",\"spin\":\"Search_spin__3V4J3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__dbIRY\",\"Open\":\"SideDrawer_Open__2WcxM\",\"Close\":\"SideDrawer_Close__g0gN6\",\"PP\":\"SideDrawer_PP__2CF3U\",\"divs\":\"SideDrawer_divs__1xfzY\",\"RoomsList\":\"SideDrawer_RoomsList__2HbRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chat\":\"Chat_Chat__3TzaC\",\"ByCurrentUser\":\"Chat_ByCurrentUser__3isyZ\",\"Sender\":\"Chat_Sender__1gXJ1\",\"Text\":\"Chat_Text__VVd_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2TE34\",\"Success\":\"Button_Success__2n8wq\",\"Danger\":\"Button_Danger__2Kz76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IncomingCall\":\"IncomingCall_IncomingCall__1wsfq\",\"Buttons\":\"IncomingCall_Buttons__6-Lpq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterBox\":\"Register_RegisterBox__30el9\",\"LoadingText\":\"Register_LoadingText__3UQcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorBox\":\"ErrorBox_ErrorBox__wKH58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OptionsDropbar\":\"OptionsDropbar_OptionsDropbar__2KLcm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"JoinableRoom\":\"JoinableRoom_JoinableRoom__1Zws2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TabBar\":\"TabBar_TabBar__39o86\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3o5hh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__dxPXP\",\"spin\":\"Spinner_spin__24L5x\"};","module.exports = __webpack_public_path__ + \"static/media/iphone_trap_remix.d21333e9.mp3\";"],"sourceRoot":""}